<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>33</version>
        <relativePath/>
    </parent>

    <groupId>org.apache.griffin</groupId>
    <artifactId>griffin</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Apache Griffin ${project.version}</name>
    <description>Big Data Quality Solution For Batch and Streaming</description>
    <url>https://griffin.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring.boot.version>2.6.1</spring.boot.version>
        <java.version>1.8</java.version>
        <junit.version>5.9.0</junit.version>
        <mockito.version>3.12.4</mockito.version>
        <spotbugs.version>3.1.12</spotbugs.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
        <maven-source-plugin.version>2.4</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M6</maven-surefire-plugin.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
        <maven.deploy.skip>false</maven.deploy.skip>
        <jacoco.skip>false</jacoco.skip>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <lombok.version>1.18.20</lombok.version>

    </properties>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <organization>
        <name>Apache Software Foundation</name>
        <url>https://www.apache.org</url>
    </organization>

    <issueManagement>
        <system>JIRA</system>
        <url>https://issues.apache.org/jira/browse/GRIFFIN</url>
    </issueManagement>

    <mailingLists>
        <mailingList>
            <name>griffin-dev</name>
            <subscribe>dev-subscribe@griffin.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@griffin.apache.org</unsubscribe>
            <post>dev@griffin.apache.org</post>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:https://gitbox.apache.org/repos/asf/griffin.git</connection>
        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/griffin.git</developerConnection>
        <url>https://gitbox.apache.org/repos/asf?p=griffin.git;a=summary</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
    </distributionManagement>


    <modules>
        <module>griffin-connectors</module>
        <module>griffin-metric</module>
        <module>griffin-dqc</module>
        <module>griffin-scheduler</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.griffin</groupId>
                <artifactId>griffin-metric</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.griffin</groupId>
                <artifactId>griffin-scheduler</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.griffin</groupId>
                <artifactId>griffin-connectors</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.griffin</groupId>
                <artifactId>griffin-dqc</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring.boot.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>
                <!-- Surefire runs all Java tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <testFailureIgnore>false</testFailureIgnore>
                        <useSystemClassLoader>true</useSystemClassLoader>
                        <!--
                        1.forkCount=1/reuseForks=true, which means that maven-surefire-plugin creates one
                        new JVM process to execute all tests in one Maven module.

                        2.forkCount=1/reuseForks=false executes each test class in its own JVM process, one after
                        another. It creates the highest level of separation for the test execution, but it would
                        probably also give you the longest execution time of all the available options.
                        Consider it as a last resort.
                        -->
                        <forkCount>1</forkCount>
                        <reuseForks>true</reuseForks>
                        <failIfNoTests>false</failIfNoTests>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <systemProperties>
                            <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>
                        </systemProperties>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.rat</groupId>
                    <artifactId>apache-rat-plugin</artifactId>
                    <version>${maven-apache-rat.version}</version>
                    <configuration>
                        <!-- Exclude files/folders for apache release -->
                        <excludes>
                            <!-- Git specific files -->
                            <exclude>.git/</exclude>
                            <exclude>.gitignore</exclude>
                            <!-- IDE specific files-->
                            <exclude>**/.idea/</exclude>
                            <exclude>**/.scalastyle/</exclude>
                            <exclude>**/*.iml</exclude>
                            <exclude>**/.classpath</exclude>
                            <exclude>**/.settings/**</exclude>
                            <exclude>**/.project</exclude>
                            <!-- Maven working directory -->
                            <exclude>**/target/**</exclude>
                            <!-- Patch files which can be lying around -->
                            <exclude>**/*.patch</exclude>
                            <exclude>**/*.rej</exclude>
                            <!-- README and test data with exact format -->
                            <exclude>README*</exclude>
                            <exclude>DEPENDENCIES</exclude>
                            <exclude>**/licenses/*</exclude>
                            <exclude>**/*.log</exclude>
                            <exclude>**/*.out</exclude>
                            <exclude>**/*.db</exclude>
                            <exclude>**/velocity.log*</exclude>
                            <exclude>**/*.json</exclude>
                            <exclude>**/*.csv</exclude>
                            <exclude>**/*.avro</exclude>
                            <exclude>**/*.dat</exclude>
                            <exclude>**/banner.txt</exclude>
                            <exclude>**/bower_components/**</exclude>
                            <exclude>**/node_modules/**</exclude>
                            <exclude>**/.tmp/**</exclude>
                            <exclude>**/angular/src/assets/.gitkeep</exclude>
                            <exclude>**/angular/.editorconfig</exclude>
                            <exclude>**/dist/**</exclude>
                            <exclude>**/.bowerrc</exclude>
                            <exclude>**/src/main/resources/public/**</exclude>
                            <exclude>**/pom.xml.releaseBackup</exclude>
                            <exclude>**/pom.xml.tag</exclude>
                            <exclude>**/_SUCCESS</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>rat-check</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

</project>