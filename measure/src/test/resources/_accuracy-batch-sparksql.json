{
  "name": "accu_batch",

  "process.type": "batch",

  "data.sources": [
    {
      "name": "source",
      "baseline": true,
      "connectors": [
        {
          "type": "avro",
          "version": "1.7",
          "config": {
            "file.name": "src/test/resources/users_info_src.avro"
          }
        }
      ]
    }, {
      "name": "target",
      "connectors": [
        {
          "type": "avro",
          "version": "1.7",
          "config": {
            "file.name": "src/test/resources/users_info_target.avro"
          }
        }
      ]
    }
  ],

  "evaluate.rule": {
    "rules": [
      {
        "dsl.type": "spark-sql",
        "name": "missRecords",
        "rule": "SELECT source.* FROM source LEFT JOIN target ON coalesce(source.user_id, '') = coalesce(target.user_id, '') AND coalesce(source.first_name, '') = coalesce(target.first_name, '') AND coalesce(source.post_code, '') = coalesce(target.post_code, '') WHERE (NOT (source.user_id IS NULL AND source.first_name IS NULL AND source.post_code IS NULL)) AND (target.user_id IS NULL AND target.first_name IS NULL AND target.post_code IS NULL)",
        "record": {
          "name": "miss"
        }
      },
      {
        "dsl.type": "spark-sql",
        "name": "miss_count",
        "rule": "SELECT count(*) as miss FROM `missRecords`"
      },
      {
        "dsl.type": "spark-sql",
        "name": "total_count",
        "rule": "SELECT count(*) as total FROM source"
      },
      {
        "dsl.type": "spark-sql",
        "name": "accu",
        "rule": "SELECT `total_count`.`total` AS `total`, coalesce(`miss_count`.`miss`, 0) AS `miss`, (`total` - `miss`) AS `matched` FROM `total_count` FULL JOIN `miss_count`",
        "metric": {
          "name": "accu"
        }
      }
    ]
  }
}